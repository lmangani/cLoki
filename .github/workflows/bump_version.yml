name: 'Bump & Publish'

on:
  push:
    branches:
      - 'master'

jobs:
  bump-version:
    name: 'Bump Version on master & Publish'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v2'
        with:
          ref: ${{ github.ref }}
      - name: 'cat package.json'
        run: cat ./package.json
      - name: 'Automated Version Bump'
        id: version-bump
        uses: 'phips28/gh-action-bump-version@master'
        with:
          tag-prefix: 'v'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'cat package.json'
        run: cat ./package.json
      - name: 'Output Step'
        env:
          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
        run: echo "new tag $NEW_TAG"
      - name: Check NPM secret presence
        id: checksecrets
        shell: bash
        run: |
          if [ "$SECRET" == "" ]; then
            echo ::set-output name=secretspresent::false
          else
            echo ::set-output name=secretspresent::true
          fi
        env:
          SECRET: ${{ secrets.NPM_TOKEN }}
      - uses: actions/setup-node@v1
        if: ${{ steps.checksecrets.outputs.secretspresent }}
        with:
          node-version: 14
      - name: Publish to NPM
        if: ${{ steps.checksecrets.outputs.secretspresent }}
        run: |
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          npm install
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Check Docker secret presence
        id: checkdocker
        shell: bash
        run: |
          if [ "$SECRET" == "" ]; then
            echo ::set-output name=secretspresent::false
          else
            echo ::set-output name=secretspresent::true
          fi
        env:
          SECRET: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        if: ${{ steps.checkdocker.outputs.secretspresent }}
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            qxip/cloki
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=latest,enable=${{ contains(GitHub.ref, 'master') }}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up Docker QEMU
        if: ${{ steps.checkdocker.outputs.secretspresent }}
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        if: ${{ steps.checkdocker.outputs.secretspresent }}
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: ${{ steps.checkdocker.outputs.secretspresent }}
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        if: ${{ steps.checkdocker.outputs.secretspresent }}
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
